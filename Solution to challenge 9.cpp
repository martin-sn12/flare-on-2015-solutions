#include <iostream>

typedef unsigned char byte;
typedef unsigned int uint;

byte key_table[] = {
	0x12, 0x06, 0x17, 0x1A, 0x0A, 0x0D, 0x02, 0x1E, 0x16, 0x10, 0x1F, 0x09, 0x23, 0x0F, 0x14, 0x25,
	0x1D, 0x03, 0x19, 0x21, 0x0B, 0x28, 0x13, 0x00, 0x26, 0x08, 0x1B, 0x0C, 0x04, 0x27, 0x24, 0x1C,
	0x01, 0x22, 0x18, 0x20, 0x11, 0x15, 0x05, 0x0E, 0x07
};

byte ah_table[] = {
	0xF4, 0x64, 0x15, 0x8C, 0x65, 0x60, 0xE2, 0x1B, 0x8E, 0x40, 0x4A, 0x34, 0x45, 0xE3, 0x96, 0x4C,
	0xEB, 0xC9, 0x0D, 0xEB, 0x8E, 0x67, 0x26, 0xEF, 0x32, 0x46, 0xB5, 0xBD, 0xB2, 0xE6, 0x9F, 0xFF,
	0xF1, 0x74, 0xEF, 0xA8, 0x46, 0xC4, 0x60, 0x39, 0x65
};

byte rol_table[] = {
	0xAC, 0xBE, 0xF5, 0x4E, 0x75, 0xBC, 0x87, 0xB8, 0x16, 0x67, 0x6B, 0x5C, 0xFA, 0xF1, 0xF9, 0x93,
	0xF2, 0xD4, 0xF8, 0x23, 0xB9, 0xC8, 0x11, 0x7E, 0xCA, 0x56, 0xD6, 0x1B, 0x0A, 0xDA, 0x6E, 0xB5,
	0x01, 0xC1, 0x55, 0x9B, 0xB8, 0x61, 0xCE, 0x4C, 0x6E
};

byte proper_key[] = {
	0xBA, 0xC2, 0xCC, 0xB8, 0x80, 0xF0, 0x48, 0x77, 0xF9, 0x9A, 0x50, 0x55, 0xDC, 0x01, 0xE1, 0xEB,
	0x16, 0x5A, 0x6B, 0xC6, 0xC3, 0x0E, 0x8E, 0x27, 0x5D, 0xC3, 0xF4, 0x4E, 0x06, 0x42, 0xBC, 0xF2,
	0x5D, 0x56, 0x30, 0x2E, 0x19, 0x53, 0x53, 0x66, 0xD2
};

char get_decrypted_char(byte ch, uint i) {
	byte index = key_table[key_table[i]];

	ch = _rotr8(ch, rol_table[index]);
	ch ^= ah_table[index];
	
	return ch;
	// return (_rotr8(ch, rol_table[index]) ^ ah_table[index]);
}

int main() {
	for (uint i = 0; i < 41; i++) {
		byte ch = proper_key[key_table[key_table[i]]];
		printf("%c", get_decrypted_char(ch, i));
	}

	return 0;
}